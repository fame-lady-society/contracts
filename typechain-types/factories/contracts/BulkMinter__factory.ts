/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BulkMinter,
  BulkMinterInterface,
} from "../../contracts/BulkMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCompatibleWithSpotMints",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "SequentialMintExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "SequentialUpToTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "SpotMintTokenIdTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "ownership",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastMintedTokenId",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "count",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600a60006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055503480156200004b57600080fd5b5060405162002edc38038062002edc8339818101604052810190620000719190620002d4565b82828160029081620000849190620005d8565b508060039081620000969190620005d8565b50620000a76200010a60201b60201c565b600081905550620000bd6200010a60201b60201c565b620000cd6200010f60201b60201c565b1015620000ed57620000ec63fed8210f60e01b6200013760201b60201c565b5b50508060099081620001009190620005d8565b50505050620006bf565b600090565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b8060005260046000fd5b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001aa826200015f565b810181811067ffffffffffffffff82111715620001cc57620001cb62000170565b5b80604052505050565b6000620001e162000141565b9050620001ef82826200019f565b919050565b600067ffffffffffffffff82111562000212576200021162000170565b5b6200021d826200015f565b9050602081019050919050565b60005b838110156200024a5780820151818401526020810190506200022d565b60008484015250505050565b60006200026d6200026784620001f4565b620001d5565b9050828152602081018484840111156200028c576200028b6200015a565b5b620002998482856200022a565b509392505050565b600082601f830112620002b957620002b862000155565b5b8151620002cb84826020860162000256565b91505092915050565b600080600060608486031215620002f057620002ef6200014b565b5b600084015167ffffffffffffffff81111562000311576200031062000150565b5b6200031f86828701620002a1565b935050602084015167ffffffffffffffff81111562000343576200034262000150565b5b6200035186828701620002a1565b925050604084015167ffffffffffffffff81111562000375576200037462000150565b5b6200038386828701620002a1565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003e057607f821691505b602082108103620003f657620003f562000398565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000421565b6200046c868362000421565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004b9620004b3620004ad8462000484565b6200048e565b62000484565b9050919050565b6000819050919050565b620004d58362000498565b620004ed620004e482620004c0565b8484546200042e565b825550505050565b600090565b62000504620004f5565b62000511818484620004ca565b505050565b5b8181101562000539576200052d600082620004fa565b60018101905062000517565b5050565b601f82111562000588576200055281620003fc565b6200055d8462000411565b810160208510156200056d578190505b620005856200057c8562000411565b83018262000516565b50505b505050565b600082821c905092915050565b6000620005ad600019846008026200058d565b1980831691505092915050565b6000620005c883836200059a565b9150826002028217905092915050565b620005e3826200038d565b67ffffffffffffffff811115620005ff57620005fe62000170565b5b6200060b8254620003c7565b620006188282856200053d565b600060209050601f8311600181146200065057600084156200063b578287015190505b620006478582620005ba565b865550620006b7565b601f1984166200066086620003fc565b60005b828110156200068a5784890151825560018201915060208501945060208101905062000663565b86831015620006aa5784890151620006a6601f8916826200059a565b8355505b6001600288020188555050505b505050505050565b61280d80620006cf6000396000f3fe60806040526004361061012a5760003560e01c80636508b10a116100ab57806399a2557a1161006f57806399a2557a146103f1578063a22cb4651461042e578063b88d4fde14610457578063c23dc68f14610473578063c87b56dd146104b0578063e985e9c5146104ed5761012a565b80636508b10a146102f857806369d3e20e1461032357806370a082311461034c5780638462151c1461038957806395d89b41146103c65761012a565b806323b872dd116100f257806323b872dd1461021b57806332cb6b0c1461023757806342842e0e146102625780635bbb21771461027e5780636352211e146102bb5761012a565b806301ffc9a71461012f57806306fdde031461016c578063081812fc14610197578063095ea7b3146101d457806318160ddd146101f0575b600080fd5b34801561013b57600080fd5b5061015660048036038101906101519190611b36565b61052a565b6040516101639190611b7e565b60405180910390f35b34801561017857600080fd5b506101816105bc565b60405161018e9190611c29565b60405180910390f35b3480156101a357600080fd5b506101be60048036038101906101b99190611c81565b61064e565b6040516101cb9190611cef565b60405180910390f35b6101ee60048036038101906101e99190611d36565b6106ac565b005b3480156101fc57600080fd5b506102056106bc565b6040516102129190611d85565b60405180910390f35b61023560048036038101906102309190611da0565b610709565b005b34801561024357600080fd5b5061024c6109ca565b6040516102599190611e1e565b60405180910390f35b61027c60048036038101906102779190611da0565b6109d0565b005b34801561028a57600080fd5b506102a560048036038101906102a09190611e9e565b6109f0565b6040516102b2919061204e565b60405180910390f35b3480156102c757600080fd5b506102e260048036038101906102dd9190611c81565b610a50565b6040516102ef9190611cef565b60405180910390f35b34801561030457600080fd5b5061030d610a62565b60405161031a9190611e1e565b60405180910390f35b34801561032f57600080fd5b5061034a6004803603810190610345919061209c565b610a84565b005b34801561035857600080fd5b50610373600480360381019061036e91906120c9565b610b2a565b6040516103809190611d85565b60405180910390f35b34801561039557600080fd5b506103b060048036038101906103ab91906120c9565b610bc1565b6040516103bd91906121b4565b60405180910390f35b3480156103d257600080fd5b506103db610c3c565b6040516103e89190611c29565b60405180910390f35b3480156103fd57600080fd5b50610418600480360381019061041391906121d6565b610cce565b60405161042591906121b4565b60405180910390f35b34801561043a57600080fd5b5061045560048036038101906104509190612255565b610ce4565b005b610471600480360381019061046c91906123c5565b610def565b005b34801561047f57600080fd5b5061049a60048036038101906104959190611c81565b610e41565b6040516104a7919061249d565b60405180910390f35b3480156104bc57600080fd5b506104d760048036038101906104d29190611c81565b610eb6565b6040516104e49190611c29565b60405180910390f35b3480156104f957600080fd5b50610514600480360381019061050f91906124b8565b610f33565b6040516105219190611b7e565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061058557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105b55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600280546105cb90612527565b80601f01602080910402602001604051908101604052809291908181526020018280546105f790612527565b80156106445780601f1061061957610100808354040283529160200191610644565b820191906000526020600020905b81548152906001019060200180831161062757829003601f168201915b5050505050905090565b600061065982610fc7565b61066e5761066d63cf4700e460e01b611073565b5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6106b88282600161107d565b5050565b60006106c66111ac565b600154600054030390507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6106f96111b1565b1461070657600854810190505b90565b6000610714826111d9565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107895761078863a114810060e01b611073565b5b600080610795846112f2565b915091506107ab81876107a6611319565b611321565b6107d6576107c0866107bb611319565b610f33565b6107d5576107d46359c896be60e01b611073565b5b5b6107e38686866001611365565b80156107ee57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506108bc8561089888888761136b565b7c020000000000000000000000000000000000000000000000000000000017611393565b600460008681526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000841603610942576000600185019050600060046000838152602001908152602001600020540361094057600054811461093f578360046000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600081036109b4576109b363ea553b3460e01b611073565b5b6109c187878760016113be565b50505050505050565b61271081565b6109eb83838360405180602001604052806000815250610def565b505050565b606080600084849050905060405191508082528060051b90508060208301016040525b60008114610a455760006020820391508186013590506000610a3482610e41565b905080836020860101525050610a13565b819250505092915050565b6000610a5b826111d9565b9050919050565b600a60009054906101000a90046fffffffffffffffffffffffffffffffff1681565b6001612710610a939190612587565b6fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff16610ac06106bc565b610aca91906125cb565b1115610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b029061264b565b60405180910390fd5b610b2733826fffffffffffffffffffffffffffffffff166113c4565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b7057610b6f638f4eb60460e01b611073565b5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b60607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610bec6111b1565b14610c0257610c0163bdba09d760e01b611073565b5b6000610c0c6111ac565b90506000610c1861154a565b90506060818314610c3157610c2e858484611553565b90505b809350505050919050565b606060038054610c4b90612527565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7790612527565b8015610cc45780601f10610c9957610100808354040283529160200191610cc4565b820191906000526020600020905b815481529060010190602001808311610ca757829003601f168201915b5050505050905090565b6060610cdb848484611553565b90509392505050565b8060076000610cf1611319565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610d9e611319565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610de39190611b7e565b60405180910390a35050565b610dfa848484610709565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610e3b57610e258484848461170f565b610e3a57610e3963d1a57ed660e01b611073565b5b5b50505050565b610e49611a7b565b610e516111ac565b8210610eb057610e5f6111b1565b821115610e7657610e6f8261183e565b9050610eb1565b610e7e61154a565b821015610eaf575b610e8f82611869565b610e9f5781600190039150610e86565b610ea88261183e565b9050610eb1565b5b5b919050565b6060610ec182610fc7565b610ed657610ed563a14c4b5060e01b611073565b5b6000610ee0611889565b90506000815103610f005760405180602001604052806000815250610f2b565b80610f0a8461191b565b604051602001610f1b9291906126a7565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610fd26111ac565b1161106d57610fdf6111b1565b82111561100957611002600460008481526020019081526020016000205461196b565b905061106e565b60005482101561106c5760005b6000600460008581526020019081526020016000205491508103611045578261103e906126cb565b9250611016565b60007c01000000000000000000000000000000000000000000000000000000008216149150505b5b5b919050565b8060005260046000fd5b600061108883610a50565b90508180156110ca57508073ffffffffffffffffffffffffffffffffffffffff166110b1611319565b73ffffffffffffffffffffffffffffffffffffffff1614155b156110f6576110e0816110db611319565b610f33565b6110f5576110f463cfb3b94260e01b611073565b5b5b836006600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b6000816111e46111ac565b116112dc57600460008381526020019081526020016000205490506112076111b1565b82111561122c576112178161196b565b6112ed5761122b63df2d9b4260e01b611073565b5b600081036112b357600054821061124e5761124d63df2d9b4260e01b611073565b5b5b600460008360019003935083815260200190815260200160002054905060008103156112ae5760007c0100000000000000000000000000000000000000000000000000000000821603156112ed576112ad63df2d9b4260e01b611073565b5b61124f565b60007c0100000000000000000000000000000000000000000000000000000000821603156112ed575b6112ec63df2d9b4260e01b611073565b5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e86113828686846119ac565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b600080549050600082036113e3576113e263b562e8dd60e01b611073565b5b6113f06000848385611365565b61141083611401600086600061136b565b61140a856119b5565b17611393565b6004600083815260200190815260200160002081905550600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff16169050600081036114c8576114c7632e07630060e01b611073565b5b6000838301905060008390506114dc6111b1565b6001830311156114f7576114f66381647e3a60e01b611073565b5b5b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48181600101915081036114f8578160008190555050505061154560008483856113be565b505050565b60008054905090565b606081831061156d5761156c6332c1995a60e01b611073565b5b6115756111ac565b831015611587576115846111ac565b92505b600061159161154a565b905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6115be6111b1565b036115c957816115cb565b835b90508084106115d8578093505b60006115e387610b2a565b90508486106115f157600090505b600081146117055780868603116116085785850390505b600060405194506001820160051b8501905080604052600061162988610e41565b90506000816040015161163e57816000015190505b60005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61166a6111b1565b1461169957868a036116845760016116806111b1565b0199505b61168c6111b1565b8a111561169857600091505b5b6116a28a61183e565b92506040830151600081146116ba57600092506116e0565b8351156116c657835192505b8b831860601b6116df576001820191508a8260051b8a01525b5b5060018a01995083604052888a14806116f857508481145b1561164157808852505050505b5050509392505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611735611319565b8786866040518563ffffffff1660e01b81526004016117579493929190612749565b6020604051808303816000875af192505050801561179357506040513d601f19601f8201168201806040525081019061179091906127aa565b60015b6117eb573d80600081146117c3576040519150601f19603f3d011682016040523d82523d6000602084013e6117c8565b606091505b5060008151036117e3576117e263d1a57ed660e01b611073565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b611846611a7b565b61186260046000848152602001908152602001600020546119c5565b9050919050565b600080600460008481526020019081526020016000205414159050919050565b60606009805461189890612527565b80601f01602080910402602001604051908101604052809291908181526020018280546118c490612527565b80156119115780601f106118e657610100808354040283529160200191611911565b820191906000526020600020905b8154815290600101906020018083116118f457829003601f168201915b5050505050905090565b606060a060405101806040526020810391506000825281835b60011561195657600184039350600a81066030018453600a8104905080611934575b50828103602084039350808452505050919050565b60007c0100000000000000000000000000000000000000000000000000000000821673ffffffffffffffffffffffffffffffffffffffff8316119050919050565b60009392505050565b60006001821460e11b9050919050565b6119cd611a7b565b81816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060a082901c816020019067ffffffffffffffff16908167ffffffffffffffff168152505060007c01000000000000000000000000000000000000000000000000000000008316141581604001901515908115158152505060e882901c816060019062ffffff16908162ffffff1681525050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600015158152602001600062ffffff1681525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b1381611ade565b8114611b1e57600080fd5b50565b600081359050611b3081611b0a565b92915050565b600060208284031215611b4c57611b4b611ad4565b5b6000611b5a84828501611b21565b91505092915050565b60008115159050919050565b611b7881611b63565b82525050565b6000602082019050611b936000830184611b6f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bd3578082015181840152602081019050611bb8565b60008484015250505050565b6000601f19601f8301169050919050565b6000611bfb82611b99565b611c058185611ba4565b9350611c15818560208601611bb5565b611c1e81611bdf565b840191505092915050565b60006020820190508181036000830152611c438184611bf0565b905092915050565b6000819050919050565b611c5e81611c4b565b8114611c6957600080fd5b50565b600081359050611c7b81611c55565b92915050565b600060208284031215611c9757611c96611ad4565b5b6000611ca584828501611c6c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cd982611cae565b9050919050565b611ce981611cce565b82525050565b6000602082019050611d046000830184611ce0565b92915050565b611d1381611cce565b8114611d1e57600080fd5b50565b600081359050611d3081611d0a565b92915050565b60008060408385031215611d4d57611d4c611ad4565b5b6000611d5b85828601611d21565b9250506020611d6c85828601611c6c565b9150509250929050565b611d7f81611c4b565b82525050565b6000602082019050611d9a6000830184611d76565b92915050565b600080600060608486031215611db957611db8611ad4565b5b6000611dc786828701611d21565b9350506020611dd886828701611d21565b9250506040611de986828701611c6c565b9150509250925092565b60006fffffffffffffffffffffffffffffffff82169050919050565b611e1881611df3565b82525050565b6000602082019050611e336000830184611e0f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611e5e57611e5d611e39565b5b8235905067ffffffffffffffff811115611e7b57611e7a611e3e565b5b602083019150836020820283011115611e9757611e96611e43565b5b9250929050565b60008060208385031215611eb557611eb4611ad4565b5b600083013567ffffffffffffffff811115611ed357611ed2611ad9565b5b611edf85828601611e48565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611f2081611cce565b82525050565b600067ffffffffffffffff82169050919050565b611f4381611f26565b82525050565b611f5281611b63565b82525050565b600062ffffff82169050919050565b611f7081611f58565b82525050565b608082016000820151611f8c6000850182611f17565b506020820151611f9f6020850182611f3a565b506040820151611fb26040850182611f49565b506060820151611fc56060850182611f67565b50505050565b6000611fd78383611f76565b60808301905092915050565b6000602082019050919050565b6000611ffb82611eeb565b6120058185611ef6565b935061201083611f07565b8060005b838110156120415781516120288882611fcb565b975061203383611fe3565b925050600181019050612014565b5085935050505092915050565b600060208201905081810360008301526120688184611ff0565b905092915050565b61207981611df3565b811461208457600080fd5b50565b60008135905061209681612070565b92915050565b6000602082840312156120b2576120b1611ad4565b5b60006120c084828501612087565b91505092915050565b6000602082840312156120df576120de611ad4565b5b60006120ed84828501611d21565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61212b81611c4b565b82525050565b600061213d8383612122565b60208301905092915050565b6000602082019050919050565b6000612161826120f6565b61216b8185612101565b935061217683612112565b8060005b838110156121a757815161218e8882612131565b975061219983612149565b92505060018101905061217a565b5085935050505092915050565b600060208201905081810360008301526121ce8184612156565b905092915050565b6000806000606084860312156121ef576121ee611ad4565b5b60006121fd86828701611d21565b935050602061220e86828701611c6c565b925050604061221f86828701611c6c565b9150509250925092565b61223281611b63565b811461223d57600080fd5b50565b60008135905061224f81612229565b92915050565b6000806040838503121561226c5761226b611ad4565b5b600061227a85828601611d21565b925050602061228b85828601612240565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6122d282611bdf565b810181811067ffffffffffffffff821117156122f1576122f061229a565b5b80604052505050565b6000612304611aca565b905061231082826122c9565b919050565b600067ffffffffffffffff8211156123305761232f61229a565b5b61233982611bdf565b9050602081019050919050565b82818337600083830152505050565b600061236861236384612315565b6122fa565b90508281526020810184848401111561238457612383612295565b5b61238f848285612346565b509392505050565b600082601f8301126123ac576123ab611e39565b5b81356123bc848260208601612355565b91505092915050565b600080600080608085870312156123df576123de611ad4565b5b60006123ed87828801611d21565b94505060206123fe87828801611d21565b935050604061240f87828801611c6c565b925050606085013567ffffffffffffffff8111156124305761242f611ad9565b5b61243c87828801612397565b91505092959194509250565b60808201600082015161245e6000850182611f17565b5060208201516124716020850182611f3a565b5060408201516124846040850182611f49565b5060608201516124976060850182611f67565b50505050565b60006080820190506124b26000830184612448565b92915050565b600080604083850312156124cf576124ce611ad4565b5b60006124dd85828601611d21565b92505060206124ee85828601611d21565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061253f57607f821691505b602082108103612552576125516124f8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061259282611df3565b915061259d83611df3565b925082820390506fffffffffffffffffffffffffffffffff8111156125c5576125c4612558565b5b92915050565b60006125d682611c4b565b91506125e183611c4b565b92508282019050808211156125f9576125f8612558565b5b92915050565b7f4d617820737570706c7920726561636865640000000000000000000000000000600082015250565b6000612635601283611ba4565b9150612640826125ff565b602082019050919050565b6000602082019050818103600083015261266481612628565b9050919050565b600081905092915050565b600061268182611b99565b61268b818561266b565b935061269b818560208601611bb5565b80840191505092915050565b60006126b38285612676565b91506126bf8284612676565b91508190509392505050565b60006126d682611c4b565b9150600082036126e9576126e8612558565b5b600182039050919050565b600081519050919050565b600082825260208201905092915050565b600061271b826126f4565b61272581856126ff565b9350612735818560208601611bb5565b61273e81611bdf565b840191505092915050565b600060808201905061275e6000830187611ce0565b61276b6020830186611ce0565b6127786040830185611d76565b818103606083015261278a8184612710565b905095945050505050565b6000815190506127a481611b0a565b92915050565b6000602082840312156127c0576127bf611ad4565b5b60006127ce84828501612795565b9150509291505056fea264697066735822122008171e4a5674e36300e0ca4bd5290ca11cb7e0f8379bbe65c05ad5f2738c5bae64736f6c63430008120033";

type BulkMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BulkMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BulkMinter__factory extends ContractFactory {
  constructor(...args: BulkMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, uri, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, uri, overrides || {}) as Promise<
      BulkMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BulkMinter__factory {
    return super.connect(runner) as BulkMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BulkMinterInterface {
    return new Interface(_abi) as BulkMinterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BulkMinter {
    return new Contract(address, _abi, runner) as unknown as BulkMinter;
  }
}
